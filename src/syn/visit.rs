macro_rules! node_set {
    ($vis:vis trait $trait_ident:ident { $($fn_ident:ident : $ty:ty),* $(,)? }) => {
        $vis trait $trait_ident {
            $(
                fn $fn_ident<'n, D>(visitor: crate::Visitor<'_, 'n, D, Self, $ty>, _node: &'n $ty) 
                where
                    D: crate::Direct<Self, $ty> + ?Sized,
                {
                    crate::Visitor::visit(visitor);
                }
            )*
        }

        $(
            impl<T: Full + ?Sized> crate::Visit<$ty> for T {
                fn visit<'n, D>(visitor: crate::Visitor<'_, 'n, D, Self, $ty>, node: &'n $ty) 
                where
                    D: crate::Direct<Self, $ty> + ?Sized,
                {
                    Self::$fn_ident(visitor, node);
                }
            } 
        )*
    }
}

node_set! {
    pub trait Full {
        visit_abi: syn::Abi, 
        visit_angle_bracketed_generic_arguments: syn::AngleBracketedGenericArguments,
        visit_arm: syn::Arm, 
        visit_assoc_const: syn::AssocConst, 
        visit_assoc_type: syn::AssocType, 
        visit_attr_style: syn::AttrStyle, 
        visit_attribute: syn::Attribute, 
        visit_bare_fn_arg: syn::BareFnArg, 
        visit_bare_variadic: syn::BareVariadic, 
        visit_bin_op: syn::BinOp, 
        visit_block: syn::Block, 
        visit_bound_lifetimes: syn::BoundLifetimes, 
        visit_captured_param: syn::CapturedParam, 
        visit_const_param: syn::ConstParam, 
        visit_constraint: syn::Constraint, 
        visit_data: syn::Data, 
        visit_data_enum: syn::DataEnum, 
        visit_data_struct: syn::DataStruct, 
        visit_data_union: syn::DataUnion, 
        visit_derive_input: syn::DeriveInput, 
        visit_expr: syn::Expr, 
        visit_expr_array: syn::ExprArray, 
        visit_expr_assign: syn::ExprAssign, 
        visit_expr_async: syn::ExprAsync, 
        visit_expr_await: syn::ExprAwait, 
        visit_expr_binary: syn::ExprBinary, 
        visit_expr_block: syn::ExprBlock, 
        visit_expr_break: syn::ExprBreak, 
        visit_expr_call: syn::ExprCall, 
        visit_expr_cast: syn::ExprCast, 
        visit_expr_closure: syn::ExprClosure, 
        visit_expr_const: syn::ExprConst, 
        visit_expr_continue: syn::ExprContinue, 
        visit_expr_field: syn::ExprField, 
        visit_expr_for_loop: syn::ExprForLoop, 
        visit_expr_group: syn::ExprGroup, 
        visit_expr_if: syn::ExprIf, 
        visit_expr_index: syn::ExprIndex, 
        visit_expr_infer: syn::ExprInfer, 
        visit_expr_let: syn::ExprLet, 
        visit_expr_lit: syn::ExprLit, 
        visit_expr_loop: syn::ExprLoop, 
        visit_expr_macro: syn::ExprMacro, 
        visit_expr_match: syn::ExprMatch, 
        visit_expr_method_call: syn::ExprMethodCall, 
        visit_expr_paren: syn::ExprParen, 
        visit_expr_path: syn::ExprPath, 
        visit_expr_range: syn::ExprRange, 
        visit_expr_raw_addr: syn::ExprRawAddr, 
        visit_expr_reference: syn::ExprReference, 
        visit_expr_repeat: syn::ExprRepeat, 
        visit_expr_return: syn::ExprReturn, 
        visit_expr_struct: syn::ExprStruct, 
        visit_expr_try: syn::ExprTry, 
        visit_expr_try_block: syn::ExprTryBlock, 
        visit_expr_tuple: syn::ExprTuple, 
        visit_expr_unary: syn::ExprUnary, 
        visit_expr_unsafe: syn::ExprUnsafe, 
        visit_expr_while: syn::ExprWhile, 
        visit_expr_yield: syn::ExprYield, 
        visit_field: syn::Field, 
        visit_field_mutability: syn::FieldMutability, 
        visit_field_pat: syn::FieldPat, 
        visit_field_value: syn::FieldValue, 
        visit_fields: syn::Fields, 
        visit_fields_named: syn::FieldsNamed, 
        visit_fields_unnamed: syn::FieldsUnnamed, 
        visit_file: syn::File, 
        visit_fn_arg: syn::FnArg, 
        visit_foreign_item: syn::ForeignItem, 
        visit_foreign_item_fn: syn::ForeignItemFn, 
        visit_foreign_item_macro: syn::ForeignItemMacro, 
        visit_foreign_item_static: syn::ForeignItemStatic, 
        visit_foreign_item_type: syn::ForeignItemType, 
        visit_generic_argument: syn::GenericArgument, 
        visit_generic_param: syn::GenericParam, 
        visit_generics: syn::Generics, 
        visit_ident: proc_macro2::Ident, 
        visit_impl_item: syn::ImplItem, 
        visit_impl_item_const: syn::ImplItemConst, 
        visit_impl_item_fn: syn::ImplItemFn, 
        visit_impl_item_macro: syn::ImplItemMacro, 
        visit_impl_item_type: syn::ImplItemType, 
        visit_impl_restriction: syn::ImplRestriction, 
        visit_index: syn::Index, 
        visit_item: syn::Item, 
        visit_item_const: syn::ItemConst, 
        visit_item_enum: syn::ItemEnum, 
        visit_item_extern_crate: syn::ItemExternCrate, 
        visit_item_fn: syn::ItemFn, 
        visit_item_foreign_mod: syn::ItemForeignMod, 
        visit_item_impl: syn::ItemImpl, 
        visit_item_macro: syn::ItemMacro, 
        visit_item_mod: syn::ItemMod, 
        visit_item_static: syn::ItemStatic, 
        visit_item_struct: syn::ItemStruct, 
        visit_item_trait: syn::ItemTrait, 
        visit_item_trait_alias: syn::ItemTraitAlias, 
        visit_item_type: syn::ItemType, 
        visit_item_union: syn::ItemUnion, 
        visit_item_use: syn::ItemUse, 
        visit_label: syn::Label, 
        visit_lifetime: syn::Lifetime, 
        visit_lifetime_param: syn::LifetimeParam, 
        visit_lit: syn::Lit, 
        visit_lit_bool: syn::LitBool, 
        visit_lit_byte: syn::LitByte, 
        visit_lit_byte_str: syn::LitByteStr, 
        visit_lit_cstr: syn::LitCStr, 
        visit_lit_char: syn::LitChar, 
        visit_lit_float: syn::LitFloat, 
        visit_lit_int: syn::LitInt, 
        visit_lit_str: syn::LitStr, 
        visit_local: syn::Local, 
        visit_local_init: syn::LocalInit, 
        visit_macro: syn::Macro, 
        visit_macro_delimiter: syn::MacroDelimiter, 
        visit_member: syn::Member, 
        visit_meta: syn::Meta, 
        visit_meta_list: syn::MetaList, 
        visit_meta_name_value: syn::MetaNameValue, 
        visit_parenthesized_generic_arguments: syn::ParenthesizedGenericArguments,
        visit_pat: syn::Pat, 
        visit_pat_ident: syn::PatIdent, 
        visit_pat_or: syn::PatOr, 
        visit_pat_paren: syn::PatParen, 
        visit_pat_reference: syn::PatReference, 
        visit_pat_rest: syn::PatRest, 
        visit_pat_slice: syn::PatSlice, 
        visit_pat_struct: syn::PatStruct, 
        visit_pat_tuple: syn::PatTuple, 
        visit_pat_tuple_struct: syn::PatTupleStruct, 
        visit_pat_type: syn::PatType, 
        visit_pat_wild: syn::PatWild, 
        visit_path: syn::Path, 
        visit_path_arguments: syn::PathArguments, 
        visit_path_segment: syn::PathSegment, 
        visit_pointer_mutability: syn::PointerMutability, 
        visit_precise_capture: syn::PreciseCapture, 
        visit_predicate_lifetime: syn::PredicateLifetime, 
        visit_predicate_type: syn::PredicateType, 
        visit_qself: syn::QSelf, 
        visit_range_limits: syn::RangeLimits, 
        visit_receiver: syn::Receiver, 
        visit_return_type: syn::ReturnType, 
        visit_signature: syn::Signature, 
        // visit_span: proc_macro2::Span, 
        visit_static_mutability: syn::StaticMutability, 
        visit_stmt: syn::Stmt, 
        visit_stmt_macro: syn::StmtMacro, 
        visit_token_stream: proc_macro2::TokenStream,
        visit_trait_bound: syn::TraitBound, 
        visit_trait_bound_modifier: syn::TraitBoundModifier, 
        visit_trait_item: syn::TraitItem, 
        visit_trait_item_const: syn::TraitItemConst, 
        visit_trait_item_fn: syn::TraitItemFn, 
        visit_trait_item_macro: syn::TraitItemMacro, 
        visit_trait_item_type: syn::TraitItemType, 
        visit_type: syn::Type, 
        visit_type_array: syn::TypeArray, 
        visit_type_bare_fn: syn::TypeBareFn, 
        visit_type_group: syn::TypeGroup, 
        visit_type_impl_trait: syn::TypeImplTrait, 
        visit_type_infer: syn::TypeInfer, 
        visit_type_macro: syn::TypeMacro, 
        visit_type_never: syn::TypeNever, 
        visit_type_param: syn::TypeParam, 
        visit_type_param_bound: syn::TypeParamBound, 
        visit_type_paren: syn::TypeParen, 
        visit_type_path: syn::TypePath, 
        visit_type_ptr: syn::TypePtr, 
        visit_type_reference: syn::TypeReference, 
        visit_type_slice: syn::TypeSlice, 
        visit_type_trait_object: syn::TypeTraitObject, 
        visit_type_tuple: syn::TypeTuple, 
        visit_un_op: syn::UnOp, 
        visit_use_glob: syn::UseGlob, 
        visit_use_group: syn::UseGroup, 
        visit_use_name: syn::UseName, 
        visit_use_path: syn::UsePath, 
        visit_use_rename: syn::UseRename, 
        visit_use_tree: syn::UseTree, 
        visit_variadic: syn::Variadic, 
        visit_variant: syn::Variant, 
        visit_vis_restricted: syn::VisRestricted, 
        visit_visibility: syn::Visibility, 
        visit_where_clause: syn::WhereClause, 
        visit_where_predicate: syn::WherePredicate, 
    }
}